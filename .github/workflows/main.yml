name: Main

on:
  pull_request:
    branches:
    - main
  push:
    branches:
    - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    name: Release
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'chore(release):')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      current_version: ${{ steps.versions.outputs.current_version }}
      new_release_version: ${{ steps.versions.outputs.new_release_version }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Configure semantic release
      run: |
        pip install python-semantic-release
        git config user.name "sentential[release-bot]"
        git config user.email "release-bot@sentential"

    - name: Configure version outputs
      id: versions
      continue-on-error: true
      run: |
        CURRENT_VERSION=$(semantic-release print-version --current)
        NEW_RELEASE_VERSION=$(semantic-release print-version)
        echo "::set-output name=current_version::$CURRENT_VERSION"
        echo "::set-output name=new_release_version::$NEW_RELEASE_VERSION"

    - name: Release
      run: semantic-release publish -D commit_author="release-bot <release-bot@sentential>"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build
    needs: release
    if: needs.release.outputs.current_version != needs.release.outputs.new_release_version
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to registry
      run: |
        docker login \
          -u ${{ github.actor }} \
          -p ${{ secrets.GITHUB_TOKEN }} \
          ${{ env.REGISTRY }}

    - name: Set image metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          # Use new release version
          type=raw,value=${{ needs.release.outputs.new_release_version }}
        flavor: |
          latest=true
    
    - name: Build and push image
      uses: docker/build-push-action@v2
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
